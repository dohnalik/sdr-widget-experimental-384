/*
	/////////////////////////////////////////////
	// BSB 20110126-20120717 Added debug
	/////////////////////////////////////////////


	print_dbg("\n\n\v2021\n\n");

	#if LCD_DISPLAY			// Multi-line LCD display
	// Initialize LCD
	//	gpio_set_gpio_pin(LCD_BL_PIN);	// Turn on LCD backlight
	lcd_q_init();
	lcd_q_clear();
	lcd_q_goto(0,0);
	lcd_q_print("RX");
	#endif


	//#define debug_buffer_length 42
	//  int debug_buffer1[debug_buffer_length];
	//  int debug_buffer2[debug_buffer_length];

	  // Below debug code works with \0-terminated
	  // 	  void print_dbg(const char *str)

	  // + Read up on strings and arrays - Done, although print_dbg_char() poses some mental challenges...
	  // + Make some input code - Done
	  // - Input / output code in OS context, LEDs
	  // - Try to wake up the LCD
	  // - Understand more USB, I2S, Mobo, RTOS etc. in existing code
	  // - Make some simple control structures and interrupts
	  // - Try to get audio with present hardware
	  // - Start working on 44.1 / async

	  char indata;
	  int hexdata;
	  char a = 0;
	  char localposx=0;
	  char localposy=0;
	  char localnum=0;

	  char msg[] = "Msg2\n"; // compiles and works with msg[1]++;
	//  char *msg = "Msg3\n"; // compiles but doesn't work with msg[1]++; no compile with &msg[1]++;, no comple with *msg[1]++;
	  while(1)
	  {

// Must understand more of FreeRTOS first...
/*		  hexdata = read_dbg_char_hex(DBG_NO_ECHO);
		  print_dbg_char_hex(hexdata+1);
		  print_dbg_char_char('a'); // Works with character 'a' or indata.
		  print_dbg_char("a"); // Works with string "a"

		  indata = read_dbg_char(DBG_ECHO, DBG_CHECKSUM_NORMAL);
		  if (indata=='a')
			  print_dbg_char_hex(read_dbg_char(DBG_NO_ECHO, DBG_CHECKSUM_RESET));
		  else
			  print_dbg_char_hex(read_dbg_char(DBG_NO_ECHO, DBG_CHECKSUM_READOUT));

		  msg[2] = indata;
		  msg[1]++;
		  print_dbg(msg);

		  lcd_q_goto(localposy, localposx);
		  lcd_q_write(localnum+0x30);
		  if (localposx++ > 15)
		  {
			  localposx = 0;
			  if (localposy == 0)
				  localposy = 1;
			  else
			  {
				  localposy = 0;
				  if (localnum++ > 9)
					  localnum = 0;
			  }
		  }

		  a=read_dbg_char_hex(1);
		  print_dbg_char_hex(++a);
		  print_dbg_char_char('\n');
		  LED_Toggle(LED0);
		  LED_Toggle(LED1);
	      vTaskDelay(120);
	}

	/////////////////////////////////////////////
	// BSB 20110127-20120717 end of insertion
	/////////////////////////////////////////////

*/

